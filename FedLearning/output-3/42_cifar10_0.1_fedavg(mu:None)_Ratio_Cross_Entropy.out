None
fed_config: {'method': 'fedavg', 'init_round': None, 'num_rounds': 300, 'num_clients': 100, 'fraction': 0.1, 'alpha': 0.1}
data_config: {'name': 'cifar10', 'num_classes': 10, 'alpha': 0.1, 'sampling_type': None}
tm_config: {'lr': 0.01, 'momentum': 0.9, 'name': 'cifar10_cnn', 'criterion': 'Ratio_Cross_Entropy', 'optimizer': 'SGD', 'local_ep': 1, 'local_bs': 10, 'mu': None}
system_config: {'is_mp': False, 'device': 'cuda', 'seed': 42, 'log_dir': 'log/cifar10/42_cifar10_0.1_fedavg($None)_Ratio_Cross_Entropy_None', 'time_config': '2022-12-10_19:43:27', 'device_id': '0'}
Files already downloaded and verified
Files already downloaded and verified
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']
sampling_type: None
sampling types : ['smote', 'r_over', 'r_under']

[WELCOME] Unfolding configurations...!
cifar10_cnn(
  (activation): ReLU(inplace=True)
  (conv1): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1), bias=False)
  (maxpool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=1, dilation=1, ceil_mode=False)
  (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(1, 1), bias=False)
  (maxpool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=1, dilation=1, ceil_mode=False)
  (flatten): Flatten(start_dim=1, end_dim=-1)
  (fc1): Linear(in_features=4096, out_features=512, bias=False)
  (fc2): Linear(in_features=512, out_features=10, bias=False)
)
[Round: 0000] ...successfully initialized model (# parameters: 2155872)!
0it [00:00, ?it/s]                  [Round: 0000] ...successfully created all 100 clients!
0it [00:00, ?it/s]                  [Round: 0000] ...successfully finished setup of all 100 clients!
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:13,  7.14it/s]  8%|▊         | 8/100 [00:00<00:02, 35.00it/s] 23%|██▎       | 23/100 [00:00<00:00, 79.29it/s] 33%|███▎      | 33/100 [00:00<00:00, 86.26it/s] 47%|████▋     | 47/100 [00:00<00:00, 103.54it/s] 64%|██████▍   | 64/100 [00:00<00:00, 122.84it/s] 79%|███████▉  | 79/100 [00:00<00:00, 128.68it/s] 94%|█████████▍| 94/100 [00:00<00:00, 133.49it/s]                                                 [Round: 0000] ...successfully transmitted models to all 100 clients!
[Round: 0001] Select clients...!
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:01,  7.74it/s]                                              [Round: 0001] ...successfully transmitted models to 10 selected clients!
[Round: 0001] Start updating selected 10 clients...!
  0%|          | 0/10 [00:00<?, ?it/s]                                      Traceback (most recent call last):
  File "main.py", line 108, in <module>
    central_server.fit()
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/server.py", line 308, in fit
    self.train_federated_model()
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/server.py", line 251, in train_federated_model
    selected_total_size = self.update_selected_clients(sampled_client_indices)
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/server.py", line 172, in update_selected_clients
    self.clients[idx].client_update(self._round)
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/fedavg_client.py", line 100, in client_update
    self.task_model_update()
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/fedavg_client.py", line 88, in task_model_update
    loss_func = Ratio_Cross_Entropy(device=self.device, class_num=self.num_class, size_average=True)
  File "/home/ijeong/workspace/Lecture/PRML/Project/code/prml_federeated_learning/FedLearning/src/criterion.py", line 120, in __init__
    self.alpha = Variable(alpha)
TypeError: Variable data has to be a tensor, but got float
